{"id":1148,"date":"2020-11-15T05:31:34","date_gmt":"2020-11-15T05:31:34","guid":{"rendered":"https:\/\/www.pyprifix.netlify.app\/?page_id=1148"},"modified":"2020-11-15T05:34:05","modified_gmt":"2020-11-15T05:34:05","slug":"python-tuple-vs-list","status":"publish","type":"page","link":"https:\/\/www.pyprifix.netlify.app\/advanced-python\/python-tuple-vs-list\/","title":{"rendered":"Python Tuple vs. List"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn the difference between tuple and list.<\/p>\n\n\n\n<p>Both <a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-tuples\/\">tuple<\/a> and <a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-list\/\">list<\/a> are <a href=\"https:\/\/www.pyprifix.netlify.app\/advanced-python\/python-sequences\/\">sequence types<\/a>. However, they have some main differences.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">1) A tuple is immutable while a list is mutable<\/h2>\n\n\n\n<p>The following example defines a list and modifies the first element:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">fruits = &#91;<span class=\"hljs-string\">'apple'<\/span>, <span class=\"hljs-string\">'orange'<\/span>, <span class=\"hljs-string\">'banana'<\/span>]\nfruits&#91;<span class=\"hljs-number\">0<\/span>] = <span class=\"hljs-string\">'strawberry'<\/span>\n\n<span class=\"hljs-keyword\">print<\/span>(fruits)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91;'strawberry', 'orange', 'banana']<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>As you can see clearly from the output, you can mutable a list. However, you cannot mutable a tuple. The following will result in an error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">fruits = (<span class=\"hljs-string\">'apple'<\/span>, <span class=\"hljs-string\">'orange'<\/span>, <span class=\"hljs-string\">'banana'<\/span>)\nfruits&#91;<span class=\"hljs-number\">0<\/span>] = <span class=\"hljs-string\">'strawberry'<\/span>    <\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">TypeError<\/span>: <span class=\"hljs-string\">'tuple'<\/span> object does not support item assignment<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Python doesn&#8217;t you to change the element of a tuple. But you can reference a new tuple. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">fruits = (<span class=\"hljs-string\">'apple'<\/span>, <span class=\"hljs-string\">'orange'<\/span>, <span class=\"hljs-string\">'banana'<\/span>)\nfruits = (<span class=\"hljs-string\">'strawberry'<\/span>, <span class=\"hljs-string\">'orange'<\/span>, <span class=\"hljs-string\">'banana'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, Python creates a new tuple and bounds the <code>fruits<\/code> variable to the newly created tuple. <\/p>\n\n\n\n<p>If you examine the memory addresses of the tuple objects, you&#8217;ll see that the <code>fruits<\/code> variable references a different memory address after the assignment:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">fruits = (<span class=\"hljs-string\">'apple'<\/span>, <span class=\"hljs-string\">'orange'<\/span>, <span class=\"hljs-string\">'banana'<\/span>)\n<span class=\"hljs-keyword\">print<\/span>(hex(id(fruits)))\n\nfruits = (<span class=\"hljs-string\">'strawberry'<\/span>, <span class=\"hljs-string\">'orange'<\/span>, <span class=\"hljs-string\">'banana'<\/span>)\n<span class=\"hljs-keyword\">print<\/span>(hex(id(fruits)))\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">0x1c018286e00\n0x1c018286e40<\/code><\/span><\/pre>\n\n\n<h2 class=\"wp-block-heading\">2) The storage efficiency of a tuple is greater than a list<\/h2>\n\n\n\n<p>A list is mutable. It means that you can add more elements to it. Because of this, Python needs to allocate more memory than needed to the list. This is called over-allocating. The over-allocation improves performance when a list is expanded.<\/p>\n\n\n\n<p>Meanwhile, a tuple is immutable therefore its element count is fixed. So Python just needs to allocate enough memory to store the initial elements.<\/p>\n\n\n\n<p>As a result, the storage efficiency of a tuple is greater than a list.<\/p>\n\n\n\n<p>To get the size of an object, you use the <code>getsizeof<\/code> function from the <code>sys<\/code> module. <\/p>\n\n\n\n<p>The following shows the sizes of a list and a tuple that stores the same elements:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">from<\/span> sys <span class=\"hljs-keyword\">import<\/span> getsizeof\n\nfruits = &#91;<span class=\"hljs-string\">'apple'<\/span>, <span class=\"hljs-string\">'orange'<\/span>, <span class=\"hljs-string\">'banana'<\/span>]\nprint(f<span class=\"hljs-string\">'The size of the list is {getsizeof(fruits)} bytes.'<\/span>)\n\nfruits = (<span class=\"hljs-string\">'strawberry'<\/span>, <span class=\"hljs-string\">'orange'<\/span>, <span class=\"hljs-string\">'banana'<\/span>)\nprint(f<span class=\"hljs-string\">'The size of the tuple is {getsizeof(fruits)} bytes.'<\/span>)\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">The size of the <span class=\"hljs-keyword\">list<\/span> is <span class=\"hljs-number\">80<\/span> bytes.\nThe size of the tuple is <span class=\"hljs-number\">64<\/span> bytes.<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">3) Copying a tuple is faster than a list<\/h2>\n\n\n\n<p>When you copy a list, Python creates a new list. The following example illustrates copying a list to another:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">fruit_list = &#91;<span class=\"hljs-string\">'apple'<\/span>, <span class=\"hljs-string\">'orange'<\/span>, <span class=\"hljs-string\">'banana'<\/span>]\nfruit_list2 = <span class=\"hljs-keyword\">list<\/span>(fruit_list)\n<span class=\"hljs-keyword\">print<\/span>(id(fruit_list) == id(fruit_list2))  <span class=\"hljs-comment\"># False<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, when copying a tuple, Python just reuses an existing tuple. It doesn&#8217;t create a new tuple because tuples are immutable.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">fruit_tuple = (<span class=\"hljs-string\">'apple'<\/span>, <span class=\"hljs-string\">'orange'<\/span>, <span class=\"hljs-string\">'banana'<\/span>)\nfruit_tuple2 = tuple(fruit_tuple)\n<span class=\"hljs-keyword\">print<\/span>(id(fruit_tuple) == id(fruit_tuple2))  <span class=\"hljs-comment\"># True<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Therefore, copying a tuple always slightly faster than a list. <\/p>\n\n\n\n<p>The following compares the time that needs to copy a list and a tuple 1 million times:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">from timeit import timeit\n\ntimes = <span class=\"hljs-number\">1<\/span>_000_000\n\nt1 = timeit(<span class=\"hljs-string\">\"list(&#91;'apple', 'orange', 'banana'])\"<\/span>, number=times)\n<span class=\"hljs-keyword\">print<\/span>(f<span class=\"hljs-string\">'Time to copy a list {times} times: {t1}'<\/span>)\n\nt2 = timeit(<span class=\"hljs-string\">\"tuple(('apple', 'orange', 'banana'))\"<\/span>, number=times)\n<span class=\"hljs-keyword\">print<\/span>(f<span class=\"hljs-string\">'Time to copy a tuple {times} times: {t2}'<\/span>)\n\ndiff = <span class=\"hljs-string\">\"{:.0%}\"<\/span>.format((t2 - t1)\/t1)\n\n<span class=\"hljs-keyword\">print<\/span>(f<span class=\"hljs-string\">'difference: {diff}'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>A tuple is immutable while a list is mutable.<\/li><li>The storage efficiency of a tuple is greater than a list.<\/li><li>Copying a tuple is slightly faster than a list.<\/li><li>Use a tuple if you don&#8217;t intend to mutable it.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1148\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/advanced-python\/python-tuple-vs-list\/\"\n\t\t\t\tdata-post-title=\"Python Tuple vs. List\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1148\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/advanced-python\/python-tuple-vs-list\/\"\n\t\t\t\tdata-post-title=\"Python Tuple vs. List\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn the difference between tuple and list. Both tuple and list are sequence types. However, they have some main differences. 1) A tuple is immutable while a list is mutable The following example defines a list and modifies the first element: Output: As you can see clearly from the output, [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":757,"menu_order":25,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"_links":{"self":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/1148"}],"collection":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/comments?post=1148"}],"version-history":[{"count":4,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/1148\/revisions"}],"predecessor-version":[{"id":1152,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/1148\/revisions\/1152"}],"up":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/757"}],"wp:attachment":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/media?parent=1148"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}