{"id":511,"date":"2020-10-13T09:09:47","date_gmt":"2020-10-13T09:09:47","guid":{"rendered":"https:\/\/www.pyprifix.netlify.app\/?page_id=511"},"modified":"2020-11-11T07:28:55","modified_gmt":"2020-11-11T07:28:55","slug":"python-kwargs","status":"publish","type":"page","link":"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-kwargs\/","title":{"rendered":"Python **kwargs"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the Python <code>**kwargs<\/code> parameters.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the Python **kwargs parameters<\/h2>\n\n\n\n<p>In Python, a <a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-functions\/\">function<\/a> can have a parameter preceded by two stars (**). For example: <code>**kwwargs<\/code><\/p>\n\n\n\n<p>The <code>**kwargs<\/code> is called a keyword parameter. <\/p>\n\n\n\n<p>When a function has the <code>**kwargs<\/code> parameter, it can accept a variable number of <a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-keyword-arguments\/\">keyword arguments<\/a> as a <a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-dictionary\/\">dictionary<\/a>.<\/p>\n\n\n\n<p>The two stars (<code>**<\/code>) are important. However, the name <code>kwargs<\/code> is by convention. Therefore, you can use any other meaningful names such as <code>**configs<\/code> and <code>**files<\/code>.<\/p>\n\n\n\n<p>The following example defines a function called <code>connect()<\/code> that accepts a <code>**kwargs<\/code> parameter:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">connect<\/span><span class=\"hljs-params\">(**kwargs)<\/span>:<\/span>\n    print(type(kwargs))\n    print(kwargs)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following function call shows an empty dictionary to the screen:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">connect()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">&lt;<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> '<span class=\"hljs-title\">dict<\/span>'&gt;\n{}<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we didn&#8217;t pass any arguments to the <code>connect()<\/code> function, the <code>kwargs<\/code> is empty dictionary.<\/p>\n\n\n\n<p>The following calls the <code>connect()<\/code> function and passes some keyword arguments into it:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">connect(server=<span class=\"hljs-string\">'localhost'<\/span>, port=<span class=\"hljs-number\">3306<\/span>, user=<span class=\"hljs-string\">'root'<\/span>, password=<span class=\"hljs-string\">'Py1hon!Xt'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>It shows the following dictionary to the screen:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">&lt;<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> '<span class=\"hljs-title\">dict<\/span>'&gt;\n{'<span class=\"hljs-title\">server<\/span>':<\/span> <span class=\"hljs-string\">'localhost'<\/span>, <span class=\"hljs-string\">'port'<\/span>: <span class=\"hljs-number\">3306<\/span>, <span class=\"hljs-string\">'user'<\/span>: <span class=\"hljs-string\">'root'<\/span>, <span class=\"hljs-string\">'password'<\/span>: <span class=\"hljs-string\">'Py1hon!Xt'<\/span>}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Inside the <code>connect()<\/code> function, you can use the <code>kwargs<\/code> argument as a dictionary.<\/p>\n\n\n\n<p>If you want to pass a dictionary to the function, you need to add two stars (<code>**<\/code>) to the argument like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">connect<\/span><span class=\"hljs-params\">(**kwargs)<\/span>:<\/span>\n    print(kwargs)\n\n\nconfig = {<span class=\"hljs-string\">'server'<\/span>: <span class=\"hljs-string\">'localhost'<\/span>,\n        <span class=\"hljs-string\">'port'<\/span>: <span class=\"hljs-number\">3306<\/span>,\n        <span class=\"hljs-string\">'user'<\/span>: <span class=\"hljs-string\">'root'<\/span>,\n        <span class=\"hljs-string\">'password'<\/span>: <span class=\"hljs-string\">'Py1thon!Xt12'<\/span>}\n\nconnect(**config)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If a function has the <code>**kwargs<\/code> parameter and other parameters, you need to place the <code>**kwargs<\/code> after other parameters. Otherwise, you&#8217;ll get an error.<\/p>\n\n\n\n<p>The syntax of the following <code>connect()<\/code> function is correct:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">connect<\/span><span class=\"hljs-params\">(fn, **kwargs)<\/span>:<\/span>\n    print(kwargs)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>However, the syntax of this function causes a SyntaxError:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">connect<\/span><span class=\"hljs-params\">(**kwargs, fn)<\/span>:<\/span>\n    print(kwargs)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Using both *args and **kwargs arguments<\/h2>\n\n\n\n<p>The following function has both *args and **kwargs parameters:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">def fn(*args, **kwargs):\r\n    <span class=\"hljs-keyword\">print<\/span>(args)\r\n    <span class=\"hljs-keyword\">print<\/span>(kwargs)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>fn<\/code> function can accept a variable number of the positional arguments. Python will pack them as a tuple and assign the tuple to the <code>args<\/code> argument.<\/p>\n\n\n\n<p>The <code>fn<\/code> function also accepts a variable number of keyword arguments. Python will pack them as a dictionary and assign the dictionary to the <code>kwargs<\/code> argument.<\/p>\n\n\n\n<p>For example:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">fn(1, 2, x=10, y=20)<\/code><\/span><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">(<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">2<\/span>)\r\n{<span class=\"hljs-string\">'x'<\/span>: <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-string\">'y'<\/span>: <span class=\"hljs-number\">20<\/span>}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Use the Python <code>**kwargs<\/code> parameter to allow the function to accept a variable number of keyword arguments.<\/li><li>Inside the function, the <code>kwargs<\/code> argument is a dictionary that contains all keyword arguments as its name-value pairs.<\/li><li>Precede double stars (<code>**<\/code>) to a dictionary argument to pass it to <code>**kwargs<\/code> parameter.<\/li><li>Always place the <code>**kwargs<\/code> parameter at the end of the parameter list, or you&#8217;ll get an error.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"511\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-kwargs\/\"\n\t\t\t\tdata-post-title=\"Python **kwargs\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"511\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-kwargs\/\"\n\t\t\t\tdata-post-title=\"Python **kwargs\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn about the Python **kwargs parameters. Introduction to the Python **kwargs parameters In Python, a function can have a parameter preceded by two stars (**). For example: **kwwargs The **kwargs is called a keyword parameter. When a function has the **kwargs parameter, it can accept a variable number of keyword [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":37,"menu_order":52,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"_links":{"self":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/511"}],"collection":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/comments?post=511"}],"version-history":[{"count":6,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/511\/revisions"}],"predecessor-version":[{"id":1053,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/511\/revisions\/1053"}],"up":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/37"}],"wp:attachment":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/media?parent=511"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}