{"id":2632,"date":"2021-10-24T14:48:17","date_gmt":"2021-10-24T14:48:17","guid":{"rendered":"https:\/\/www.pyprifix.netlify.app\/?page_id=2632"},"modified":"2021-10-25T15:56:24","modified_gmt":"2021-10-25T15:56:24","slug":"python-overriding-method","status":"publish","type":"page","link":"https:\/\/www.pyprifix.netlify.app\/python-oop\/python-overriding-method\/","title":{"rendered":"Python Overriding Method"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use Python overriding method to allow a child class to provide a specific implementation of a method that is provided by one of its parent classes.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to Python overridding method<\/h2>\n\n\n\n<p>The overriding method allows a child class to provide a specific implementation of a method that is already provided by one of its parent classes.<\/p>\n\n\n\n<p>Let&#8217;s take an example to understand the overriding method better.<\/p>\n\n\n\n<p>First, define the <code>Employee<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Employee<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, name, base_pay)<\/span>:<\/span>\n        self.name = name\n        self.base_pay = base_pay\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">get_pay<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        <span class=\"hljs-keyword\">return<\/span> self.base_pay<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>Employee<\/code> class has two <a href=\"https:\/\/www.pyprifix.netlify.app\/python-oop\/python-instance-variables\/\">instance variables<\/a> <code>name<\/code> and <code>base_pay<\/code>. It also has the <code>get_pay()<\/code> method that returns the <code>base_pay<\/code>.<\/p>\n\n\n\n<p>Second, define the <code>SalesEmployee<\/code> that inherits from the <code>Employee<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">SalesEmployee<\/span><span class=\"hljs-params\">(Employee)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, name, base_pay, sales_incentive)<\/span>:<\/span>\n        self.name = name\n        self.base_pay = base_pay\n        self.sales_incentive = sales_incentive<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>SalesEmployee<\/code> class has three instance attributes: <code>name<\/code>, <code>base_pay<\/code>, and <code>sales_incentive<\/code>. <\/p>\n\n\n\n<p>Third, create a new instance of the <code>SalesEmployee<\/code> class and display the pay:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">john = SalesEmployee(<span class=\"hljs-string\">'John'<\/span>, <span class=\"hljs-number\">5000<\/span>, <span class=\"hljs-number\">1500<\/span>)\nprint(john.get_pay())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-number\">5000<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>get_pay()<\/code> method returns only the <code>base_pay<\/code>, not the sum of the <code>base_pay<\/code> and <code>sales_incentive<\/code>.  <\/p>\n\n\n\n<p>When you call the <code>get_pay()<\/code> from the instance of the <code>SalesEmployee<\/code> class, Python executes the <code>get_pay()<\/code> method of the <code>Employee<\/code> class, which returns the <code>base_pay<\/code>.<\/p>\n\n\n\n<p>To include the sales incentive in the pay, you need to redefine the <code>get_pay()<\/code> method in the <code>SalesEmployee<\/code> class as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">SalesEmployee<\/span><span class=\"hljs-params\">(Employee)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, name, base_pay, sales_incentive)<\/span>:<\/span>\n        self.name = name\n        self.base_pay = base_pay\n        self.sales_incentive = sales_incentive\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">get_pay<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        <span class=\"hljs-keyword\">return<\/span> self.base_pay + self.sales_incentive<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this case, we say that the <code>get_pay()<\/code> method in the <code>SalesEmployee<\/code> class overrides the <code>get_pay()<\/code> method in the <code>Employee<\/code> class.<\/p>\n\n\n\n<p>When you call the <code>get_pay()<\/code> method of the <code>SalesEmployee<\/code>&#8216;s object, Python will call the <code>get_pay()<\/code> method in the <code>SalesEmployee<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">john = SalesEmployee(<span class=\"hljs-string\">'John'<\/span>, <span class=\"hljs-number\">5000<\/span>, <span class=\"hljs-number\">1500<\/span>)\nprint(john.get_pay())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-number\">6500<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you create an instance of the <code>Employee<\/code> class, Python will call the <code>get_pay()<\/code> method of the <code>Employee<\/code> class, not the <code>get_pay()<\/code> method of the <code>SalesEmployee<\/code> class. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">jane = Employee(<span class=\"hljs-string\">'Jane'<\/span>, <span class=\"hljs-number\">5000<\/span>)\nprint(jane.get_pay())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Put it all together.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Employee<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, name, base_pay)<\/span>:<\/span>\n        self.name = name\n        self.base_pay = base_pay\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">get_pay<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        <span class=\"hljs-keyword\">return<\/span> self.base_pay\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">SalesEmployee<\/span><span class=\"hljs-params\">(Employee)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, name, base_pay, sales_incentive)<\/span>:<\/span>\n        self.name = name\n        self.base_pay = base_pay\n        self.sales_incentive = sales_incentive\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">get_pay<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        <span class=\"hljs-keyword\">return<\/span> self.base_pay + self.sales_incentive\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    john = SalesEmployee(<span class=\"hljs-string\">'John'<\/span>, <span class=\"hljs-number\">5000<\/span>, <span class=\"hljs-number\">1500<\/span>)\n    print(john.get_pay())\n\n    jane = Employee(<span class=\"hljs-string\">'Jane'<\/span>, <span class=\"hljs-number\">5000<\/span>)\n    print(jane.get_pay())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Advanced method overriding example<\/h2>\n\n\n\n<p>The following defines the <code>Parser<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Parser<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, text)<\/span>:<\/span>\n        self.text = text\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">email<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        match = re.search(<span class=\"hljs-string\">r'&#91;a-z0-9\\.\\-+_]+@&#91;a-z0-9\\.\\-+_]+\\.&#91;a-z]+'<\/span>, self.text)\n        <span class=\"hljs-keyword\">if<\/span> match:\n            <span class=\"hljs-keyword\">return<\/span> match.group(<span class=\"hljs-number\">0<\/span>)\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">None<\/span>\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">phone<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        match = re.search(<span class=\"hljs-string\">r'\\d{3}-\\d{3}-\\d{4}'<\/span>, self.text)\n        <span class=\"hljs-keyword\">if<\/span> match:\n            <span class=\"hljs-keyword\">return<\/span> match.group(<span class=\"hljs-number\">0<\/span>)\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">None<\/span>\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">parse<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        <span class=\"hljs-keyword\">return<\/span> {\n            <span class=\"hljs-string\">'email'<\/span>: self.email(),\n            <span class=\"hljs-string\">'phone'<\/span>: self.phone()\n        }<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>Parser<\/code> class has an attribute <code>text<\/code> which specifies a piece of text to be parsed. Also, the <code>Parser<\/code> class has three methods: <\/p>\n\n\n\n<ul><li>The <code>email()<\/code> method parses a text and returns the email.<\/li><li>The <code>phone()<\/code> method parses a text and returns a phone number in the format <code>nnn-nnnn-nnnn<\/code> where <code>n<\/code> is a number from 0 to 9 e.g., <code>408-205-5663<\/code>.<\/li><li>The <code>parse()<\/code> method returns a dictionary that contains two elements <code>email<\/code> and <code>phone<\/code>. It calls the <code>email()<\/code> and <code>phone()<\/code> method to extract the email and phone from the <code>text<\/code> attribute.<\/li><\/ul>\n\n\n\n<p>The following uses the <code>Parser<\/code> class to extract email and phone:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">s = <span class=\"hljs-string\">'Contact us via 408-205-5663 or email@test.com'<\/span>\nparser = Parser(s)\nprint(parser.parse())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">{<span class=\"hljs-string\">'email'<\/span>: <span class=\"hljs-string\">'email@test.com'<\/span>, <span class=\"hljs-string\">'phone'<\/span>: <span class=\"hljs-string\">'408-205-5663'<\/span>}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Suppose you need to extract phone numbers in the format <code>n-nnn-nnn-nnnn<\/code>, which is the UK phone number format. Also, you want to use extract email like the <code>Parser<\/code> class  <\/p>\n\n\n\n<p>To do it, you can define a new class called <code>UkParser<\/code> that inherits from the <code>Parser<\/code> class. In the <code>UkParser<\/code> class, you override the <code>phone()<\/code> method as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">UkParser<\/span><span class=\"hljs-params\">(Parser)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">phone<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        match = re.search(<span class=\"hljs-string\">r'(\\+\\d{1}-\\d{3}-\\d{3}-\\d{4})'<\/span>, self.text)\n        <span class=\"hljs-keyword\">if<\/span> match:\n            <span class=\"hljs-keyword\">return<\/span> match.group(<span class=\"hljs-number\">0<\/span>)\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">None<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following use the <code>UkParser<\/code> class to extract a phone number (in UK format) and email from a text:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">s2 = <span class=\"hljs-string\">'Contact me via +1-650-453-3456 or email@test.co.uk'<\/span>\nparser = UkParser(s2)\nprint(parser.parse())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">{<span class=\"hljs-string\">'email'<\/span>: <span class=\"hljs-string\">'email@test.co.uk'<\/span>, <span class=\"hljs-string\">'phone'<\/span>: <span class=\"hljs-string\">'+1-650-453-3456'<\/span>}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>parser<\/code> calls the <code>parse()<\/code> method from the parent class which is the Parser class. In turn, the <code>parse()<\/code> method calls the <code>email()<\/code> and <code>phone()<\/code> methods. <\/p>\n\n\n\n<p>However, the <code>parser()<\/code> doesn&#8217;t call the <code>phone()<\/code> method of the <code>Parser<\/code> class but the <code>phone()<\/code> method of the <code>UkParser<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">parser.parse()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The reason is that inside the <code>parse()<\/code> method, the <code>self<\/code> is the <code>parser<\/code> which is an instance of the <code>UkParser<\/code> class. <\/p>\n\n\n\n<p>Therefore, when you call <code>self.phone()<\/code> method inside the <code>parse()<\/code> method, Python will look for the <code>phone()<\/code> method that is bound to the instance of the <code>UkParser<\/code>. <\/p>\n\n\n\n<p>Put it all together.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> re\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Parser<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, text)<\/span>:<\/span>\n        self.text = text\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">email<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        match = re.search(<span class=\"hljs-string\">r'&#91;a-z0-9\\.\\-+_]+@&#91;a-z0-9\\.\\-+_]+\\.&#91;a-z]+'<\/span>, self.text)\n        <span class=\"hljs-keyword\">if<\/span> match:\n            <span class=\"hljs-keyword\">return<\/span> match.group(<span class=\"hljs-number\">0<\/span>)\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">None<\/span>\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">phone<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        match = re.search(<span class=\"hljs-string\">r'\\d{3}-\\d{3}-\\d{4}'<\/span>, self.text)\n        <span class=\"hljs-keyword\">if<\/span> match:\n            <span class=\"hljs-keyword\">return<\/span> match.group(<span class=\"hljs-number\">0<\/span>)\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">None<\/span>\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">parse<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        <span class=\"hljs-keyword\">return<\/span> {\n            <span class=\"hljs-string\">'email'<\/span>: self.email(),\n            <span class=\"hljs-string\">'phone'<\/span>: self.phone()\n        }\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">UkParser<\/span><span class=\"hljs-params\">(Parser)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">phone<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        match = re.search(<span class=\"hljs-string\">r'(\\+\\d{1}-\\d{3}-\\d{3}-\\d{4})'<\/span>, self.text)\n        <span class=\"hljs-keyword\">if<\/span> match:\n            <span class=\"hljs-keyword\">return<\/span> match.group(<span class=\"hljs-number\">0<\/span>)\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">None<\/span>\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    s = <span class=\"hljs-string\">'Contact us via 408-205-5663 or email@test.com'<\/span>\n    parser = Parser(s)\n    print(parser.parse())\n\n    s2 = <span class=\"hljs-string\">'Contact me via +1-650-453-3456 or email@test.co.uk'<\/span>\n    parser = UkParser(s2)\n    print(parser.parse())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Overriding attributes<\/h2>\n\n\n\n<p>The following shows how to implement the Parser and UkParser classes by overriding attributes:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-18\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> re\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Parser<\/span>:<\/span>\n    phone_pattern = <span class=\"hljs-string\">r'\\d{3}-\\d{3}-\\d{4}'<\/span>\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, text)<\/span>:<\/span>\n        self.text = text\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">email<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        match = re.search(<span class=\"hljs-string\">r'&#91;a-z0-9\\.\\-+_]+@&#91;a-z0-9\\.\\-+_]+\\.&#91;a-z]+'<\/span>, self.text)\n        <span class=\"hljs-keyword\">if<\/span> match:\n            <span class=\"hljs-keyword\">return<\/span> match.group(<span class=\"hljs-number\">0<\/span>)\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">None<\/span>\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">phone<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        match = re.search(self.phone_pattern, self.text)\n        <span class=\"hljs-keyword\">if<\/span> match:\n            <span class=\"hljs-keyword\">return<\/span> match.group(<span class=\"hljs-number\">0<\/span>)\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">None<\/span>\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">parse<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        <span class=\"hljs-keyword\">return<\/span> {\n            <span class=\"hljs-string\">'email'<\/span>: self.email(),\n            <span class=\"hljs-string\">'phone'<\/span>: self.phone()\n        }\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">UkParser<\/span><span class=\"hljs-params\">(Parser)<\/span>:<\/span>\n    phone_pattern = <span class=\"hljs-string\">r'(\\+\\d{1}-\\d{3}-\\d{3}-\\d{4})'<\/span>\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    s = <span class=\"hljs-string\">'Contact us via 408-205-5663 or email@test.com'<\/span>\n    parser = Parser(s)\n    print(parser.parse())\n\n    s2 = <span class=\"hljs-string\">'Contact me via +1-650-453-3456 or email@test.co.uk'<\/span>\n    parser = UkParser(s2)\n    print(parser.parse())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-18\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>Parser<\/code> has a class variable <code>phone_pattern<\/code>. The <code>phone()<\/code> method in the <code>Parser<\/code> class uses the <code>phone_pattern<\/code> to extract a phone number.<\/p>\n\n\n\n<p>The <code>UkParser<\/code> child class redefines (or overrides) the <code>phone_pattern<\/code> class attribute.<\/p>\n\n\n\n<p>If you call the <code>parse()<\/code> method from the <code>UkParser<\/code>&#8216;s instance, the <code>parse()<\/code> method calls the <code>phone()<\/code> method that uses the <code>phone_pattern<\/code> defined in the <code>UkParser<\/code> class. <\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Method overrding allows a child class to provide a specific implementation of a method that is already provided by one of its parent class.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2632\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-oop\/python-overriding-method\/\"\n\t\t\t\tdata-post-title=\"Python Overriding Method\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2632\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-oop\/python-overriding-method\/\"\n\t\t\t\tdata-post-title=\"Python Overriding Method\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to override a method in the base class from a subclass.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":417,"menu_order":22,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"_links":{"self":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/2632"}],"collection":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/comments?post=2632"}],"version-history":[{"count":5,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/2632\/revisions"}],"predecessor-version":[{"id":2725,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/2632\/revisions\/2725"}],"up":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/417"}],"wp:attachment":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/media?parent=2632"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}