{"id":892,"date":"2020-10-31T03:40:44","date_gmt":"2020-10-31T03:40:44","guid":{"rendered":"https:\/\/www.pyprifix.netlify.app\/?page_id=892"},"modified":"2021-11-14T10:31:19","modified_gmt":"2021-11-14T10:31:19","slug":"python-try-except-else","status":"publish","type":"page","link":"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-try-except-else\/","title":{"rendered":"Python try&#8230;except&#8230;else"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the Python <code>try...except...else<\/code> statement.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the Python try&#8230;except&#8230;else statement<\/h2>\n\n\n\n<p>The <code><a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-try-except\/\">try<\/a><\/code> statement has an optional <code>else<\/code> clause with the following syntax:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\"><span class=\"hljs-keyword\">try<\/span>:\n    <span class=\"hljs-comment\"># code that may cause errors<\/span>\nexcept:\n    <span class=\"hljs-comment\"># code that handle exceptions<\/span>\n<span class=\"hljs-keyword\">else<\/span>:\n    <span class=\"hljs-comment\"># code that executes when no exception occurs<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>try...except...else<\/code> statement works as follows:<\/p>\n\n\n\n<ul><li>If an exception occurs in the <code>try<\/code> clause, Python skips the rest of the statements in the <code>try<\/code> clause and the <code>except<\/code> statement execute.<\/li><li>In case no exception occurs in the <code>try<\/code> clause, the <code>else<\/code> clause will execute.<\/li><\/ul>\n\n\n\n<p>When you include the <code><a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-try-except-finally\/\">finally<\/a><\/code> clause, the <code>else<\/code> clause executes after the <code>try<\/code> clause and before the <code>finally<\/code> clause.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Python try&#8230;except&#8230;else statement examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the <code>try...except...else<\/code> statement.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Using try&#8230;except&#8230;else statement for control flow<\/h3>\n\n\n\n<p>The following example illustrates how to use the <code>try...except...else<\/code> clause develop a program that calculates the body mass index (BMI).<\/p>\n\n\n\n<p>First, define a function for calculating the (BMI) based on height and weight:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">calculate_bmi<\/span><span class=\"hljs-params\">(height, weight)<\/span>:<\/span>\n    <span class=\"hljs-string\">\"\"\" calculate body mass index (BMI) \"\"\"<\/span>\n    <span class=\"hljs-keyword\">return<\/span> weight \/ height**<span class=\"hljs-number\">2<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, define another function for evaluating BMI:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">evaluate_bmi<\/span><span class=\"hljs-params\">(bmi)<\/span>:<\/span>\n    <span class=\"hljs-string\">\"\"\" evaluate the bmi \"\"\"<\/span>\n    <span class=\"hljs-keyword\">if<\/span> <span class=\"hljs-number\">18.5<\/span> &lt;= bmi &lt;= <span class=\"hljs-number\">24.9<\/span>:\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">'healthy'<\/span>\n\n    <span class=\"hljs-keyword\">if<\/span> bmi &gt;= <span class=\"hljs-number\">25<\/span>:\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">'overweight'<\/span>\n\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">'underweight'<\/span>\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, define a new <code>main()<\/code> function that prompts users for entering height and weight, and prints out the BMI result:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">main<\/span><span class=\"hljs-params\">()<\/span>:<\/span>\n    <span class=\"hljs-keyword\">try<\/span>:\n        height = float(input(<span class=\"hljs-string\">'Enter your height (meters):'<\/span>))\n        weight = float(input(<span class=\"hljs-string\">'Enter your weight (kilograms):'<\/span>))\n\n    <span class=\"hljs-keyword\">except<\/span> ValueError <span class=\"hljs-keyword\">as<\/span> error:\n        print(<span class=\"hljs-string\">'Error! please enter a valid number.'<\/span>)\n    <span class=\"hljs-keyword\">else<\/span>:\n        bmi = round(calculate_bmi(height, weight), <span class=\"hljs-number\">1<\/span>)\n        evaluation = evaluate_bmi(bmi)\n\n        print(<span class=\"hljs-string\">f'Your body mass index is <span class=\"hljs-subst\">{bmi}<\/span>'<\/span>)\n        print(<span class=\"hljs-string\">f'This is considered <span class=\"hljs-subst\">{evaluation}<\/span>!'<\/span>)\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>main()<\/code> function uses the <code>try...except...else<\/code> statement to control its flow. If you enter height and weight that cannot be converted to numbers, the <code>ValueError<\/code> exception will occur.<\/p>\n\n\n\n<p>If no exception occurs, the <code>else<\/code> clause will execute. It calculates the BMI index and displays the evaluation.<\/p>\n\n\n\n<p>Put it all together.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">calculate_bmi<\/span><span class=\"hljs-params\">(height, weight)<\/span>:<\/span>\n    <span class=\"hljs-string\">\"\"\" calculate body mass index (BMI) \"\"\"<\/span>\n    <span class=\"hljs-keyword\">return<\/span> weight \/ height**<span class=\"hljs-number\">2<\/span>\n\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">evaluate_bmi<\/span><span class=\"hljs-params\">(bmi)<\/span>:<\/span>\n    <span class=\"hljs-string\">\"\"\" evaluate the bmi \"\"\"<\/span>\n    <span class=\"hljs-keyword\">if<\/span> <span class=\"hljs-number\">18.5<\/span> &lt;= bmi &lt;= <span class=\"hljs-number\">24.9<\/span>:\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">'healthy'<\/span>\n\n    <span class=\"hljs-keyword\">if<\/span> bmi &gt;= <span class=\"hljs-number\">25<\/span>:\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">'overweight'<\/span>\n\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-string\">'underweight'<\/span>\n\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">main<\/span><span class=\"hljs-params\">()<\/span>:<\/span>\n    <span class=\"hljs-keyword\">try<\/span>:\n        height = float(input(<span class=\"hljs-string\">'Enter your height (meters):'<\/span>))\n        weight = float(input(<span class=\"hljs-string\">'Enter your weight (kilograms):'<\/span>))\n\n    <span class=\"hljs-keyword\">except<\/span> ValueError <span class=\"hljs-keyword\">as<\/span> error:\n        print(error)\n    <span class=\"hljs-keyword\">else<\/span>:\n        bmi = round(calculate_bmi(height, weight), <span class=\"hljs-number\">1<\/span>)\n        evaluation = evaluate_bmi(bmi)\n\n        print(<span class=\"hljs-string\">f'Your body mass index is <span class=\"hljs-subst\">{bmi}<\/span>'<\/span>)\n        print(<span class=\"hljs-string\">f'This is considered <span class=\"hljs-subst\">{evaluation}<\/span>!'<\/span>)\n\nmain()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">2) Using Python try&#8230;except&#8230;else and finally example<\/h3>\n\n\n\n<p>The <code>else<\/code> clause executes right before the <code><a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-try-except-finally\/\">finally<\/a><\/code> clause if no exception occurs in the <code>try<\/code> clause.<\/p>\n\n\n\n<p>The following example shows how to use the <code>try...except...else...finally<\/code> clause:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">fruits = {\n    <span class=\"hljs-string\">'apple'<\/span>: <span class=\"hljs-number\">10<\/span>,\n    <span class=\"hljs-string\">'orange'<\/span>: <span class=\"hljs-number\">20<\/span>,\n    <span class=\"hljs-string\">'banana'<\/span>: <span class=\"hljs-number\">30<\/span>\n}\n\nkey = <span class=\"hljs-literal\">None<\/span>\n<span class=\"hljs-keyword\">while<\/span> <span class=\"hljs-literal\">True<\/span>:\n    <span class=\"hljs-keyword\">try<\/span>:\n        key = input(<span class=\"hljs-string\">'Enter a key to lookup:'<\/span>)\n        fruit = fruits&#91;key.lower()]\n    <span class=\"hljs-keyword\">except<\/span> KeyError:\n        print(<span class=\"hljs-string\">f'Error! <span class=\"hljs-subst\">{key}<\/span> does not exist.'<\/span>)\n    <span class=\"hljs-keyword\">except<\/span> KeyboardInterrupt:\n        <span class=\"hljs-keyword\">break<\/span>\n    <span class=\"hljs-keyword\">else<\/span>:\n        print(fruit)\n    <span class=\"hljs-keyword\">finally<\/span>:\n        print(<span class=\"hljs-string\">'Press Ctrl-C to exit.'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>First, define the <code>fruits<\/code> dictionary that contains three elements.<\/li><li>Second, use a <code>while<\/code> loop to repeatedly get inputs from users. It stops the loop until the users press <code>Ctrl-C<\/code>.<\/li><li>Third, use the <code>try...except...else...finally<\/code> clause inside the <code>while<\/code> loop. We use the user input to find for the element in the dictionary.<\/li><\/ul>\n\n\n\n<p>If the key doesn&#8217;t exist, the <code>KeyError<\/code> exception occurs, the except clause will execute.<\/p>\n\n\n\n<p>If users press <code>Ctrl-C<\/code>, the <code>KeyboardInterrupt<\/code> exception occurs that executes the <code>break<\/code> statement to terminate the loop.<\/p>\n\n\n\n<p>If the key is found in the <code>fruits<\/code> dictionary, the program prints out the found element.<\/p>\n\n\n\n<p>The <code>finally<\/code> clause always executes. It shows the reminder to the users that they should press Ctrl-C to exit.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Use the Python <code>try...except...else<\/code> statement provides you with a way to control the flow of the program in case of exceptions.<\/li><li>The <code>else<\/code> clause executes if no exception occurs in the <code>try<\/code> clause.<\/li><li>If so, the <code>else<\/code> clause executes after the <code>try<\/code> clause and before the <code>finally<\/code> clause.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"892\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-try-except-else\/\"\n\t\t\t\tdata-post-title=\"Python try&#8230;except&#8230;else\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"892\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-try-except-else\/\"\n\t\t\t\tdata-post-title=\"Python try&#8230;except&#8230;else\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn how to use the Python try&#8230;except&#8230;else statement. Introduction to the Python try&#8230;except&#8230;else statement The try statement has an optional else clause with the following syntax: The try&#8230;except&#8230;else statement works as follows: If an exception occurs in the try clause, Python skips the rest of the statements in the try [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":37,"menu_order":62,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"_links":{"self":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/892"}],"collection":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/comments?post=892"}],"version-history":[{"count":4,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/892\/revisions"}],"predecessor-version":[{"id":2926,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/892\/revisions\/2926"}],"up":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/37"}],"wp:attachment":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/media?parent=892"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}