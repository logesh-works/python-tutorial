{"id":596,"date":"2020-10-17T05:02:15","date_gmt":"2020-10-17T05:02:15","guid":{"rendered":"https:\/\/www.pyprifix.netlify.app\/?page_id=596"},"modified":"2023-01-28T01:53:38","modified_gmt":"2023-01-28T01:53:38","slug":"python-set-union","status":"publish","type":"page","link":"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-set-union\/","title":{"rendered":"Python Set Union"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to union two or more sets by using the Python set <code>union()<\/code> or set union operator (|).<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the set union<\/h2>\n\n\n\n<p>The union of two <a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-set\/\">sets<\/a> returns a new set that contains distinct elements from both sets.<\/p>\n\n\n\n<p>Suppose that you have the following sets:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">s1 = {<span class=\"hljs-string\">'Python'<\/span>, <span class=\"hljs-string\">'Java'<\/span>}\ns2 = {<span class=\"hljs-string\">'C#'<\/span>, <span class=\"hljs-string\">'Java'<\/span>}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The union of the s1 and s2 sets returns the following set:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">{<span class=\"hljs-string\">'Java'<\/span>,<span class=\"hljs-string\">'Python'<\/span>, <span class=\"hljs-string\">'C#'<\/span>}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Typically, you use the Venn diagram to illustrate the union of two sets. For example:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"708\" height=\"189\" src=\"https:\/\/www.pyprifix.netlify.app\/wp-content\/uploads\/2020\/10\/Python-Set-Union-Example.png\" alt=\"Python Set Union Example\" class=\"wp-image-603\" srcset=\"https:\/\/www.pyprifix.netlify.app\/wp-content\/uploads\/2020\/10\/Python-Set-Union-Example.png 708w, https:\/\/www.pyprifix.netlify.app\/wp-content\/uploads\/2020\/10\/Python-Set-Union-Example-300x80.png 300w\" sizes=\"(max-width: 708px) 100vw, 708px\" \/><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">Union sets using <code>union()<\/code> method<\/h2>\n\n\n\n<p>In Python, to union two or more sets, you use the <code>union()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">new_set = <span class=\"hljs-keyword\">set<\/span>.union(another_set, ...)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example shows how to union the <code>s1<\/code> and <code>s2<\/code> sets:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">s1 = {<span class=\"hljs-string\">'Python'<\/span>, <span class=\"hljs-string\">'Java'<\/span>}\ns2 = {<span class=\"hljs-string\">'C#'<\/span>, <span class=\"hljs-string\">'Java'<\/span>}\n\ns = s1.union(s2)\n\n<span class=\"hljs-keyword\">print<\/span>(s)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">{<span class=\"hljs-string\">'Python'<\/span>, <span class=\"hljs-string\">'Java'<\/span>, <span class=\"hljs-string\">'C#'<\/span>}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Union sets using the | operator<\/h2>\n\n\n\n<p>Python provides you with the set union operator <code>|<\/code> that allows you to union two sets:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">new_set = set1 | set2<\/code><\/span><\/pre>\n\n\n<p>The set union operator (<code>|<\/code>) returns a new set that consists of distinct elements from both <code>set1<\/code> and <code>set2<\/code>.<\/p>\n\n\n\n<p>The following example shows how to use the union operator (<code>|<\/code>) to union the <code>s1<\/code> and <code>s2<\/code> sets:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">s1 = {<span class=\"hljs-string\">'Python'<\/span>, <span class=\"hljs-string\">'Java'<\/span>}\ns2 = {<span class=\"hljs-string\">'C#'<\/span>, <span class=\"hljs-string\">'Java'<\/span>}\n\ns = s1 | s2\n\n<span class=\"hljs-keyword\">print<\/span>(s)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">{<span class=\"hljs-string\">'Java'<\/span>, <span class=\"hljs-string\">'C#'<\/span>, <span class=\"hljs-string\">'Python'<\/span>}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">The union() method vs. set union operator<\/h2>\n\n\n\n<p>In fact, the <code>union()<\/code> method accepts one or more <a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-iterables\/\">iterables<\/a>, converts the iterables to sets, and performs the union.<\/p>\n\n\n\n<p>The following example shows how to pass a <a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-list\/\">list<\/a> to the <code>union()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">rates = {<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>}\nranks = &#91;<span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">4<\/span>]\n\nratings = rates.union(ranks)\n\n<span class=\"hljs-keyword\">print<\/span>(ratings)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">{1, 2, 3, 4}<\/code><\/span><\/pre>\n\n\n<p>However, the union operator (<code>|<\/code>) only allows sets, not iterables like the <code>union()<\/code> method.<\/p>\n\n\n\n<p>The following example causes an error:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">rates = {1, 2, 3}\nranks = &#91;2, 3, 4]\n\nratings = rates | ranks<\/code><\/span><\/pre>\n\n\n<p>Error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">TypeError<\/span>: unsupported operand type(s) <span class=\"hljs-keyword\">for<\/span> |: <span class=\"hljs-string\">'set'<\/span> and <span class=\"hljs-string\">'list'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In conclusion, the <code>union()<\/code> method accepts the iterables while the union operator only allows sets.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul>\n<li>The union of two or more sets returns distinct values from both sets.<\/li>\n\n\n\n<li>Use <code>union()<\/code> method or set union operator (<code>|<\/code>) to union two or more sets.<\/li>\n\n\n\n<li>The <code>union()<\/code> method accepts one or more iterables while the set union operator (<code>|<\/code>) only accepts sets.<\/li>\n<\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"596\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-set-union\/\"\n\t\t\t\tdata-post-title=\"Python Set Union\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"596\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-set-union\/\"\n\t\t\t\tdata-post-title=\"Python Set Union\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn how to union two or more sets by using the Python set union() or set union operator (|). Introduction to the set union The union of two sets returns a new set that contains distinct elements from both sets. Suppose that you have the following sets: The union of [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":37,"menu_order":40,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"_links":{"self":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/596"}],"collection":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/comments?post=596"}],"version-history":[{"count":5,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/596\/revisions"}],"predecessor-version":[{"id":6516,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/596\/revisions\/6516"}],"up":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/37"}],"wp:attachment":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/media?parent=596"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}