{"id":89,"date":"2020-10-03T01:24:43","date_gmt":"2020-10-03T01:24:43","guid":{"rendered":"https:\/\/www.pyprifix.netlify.app\/?page_id=89"},"modified":"2022-09-15T04:02:07","modified_gmt":"2022-09-15T04:02:07","slug":"python-for-range","status":"publish","type":"page","link":"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-for-range\/","title":{"rendered":"Python for Loop with Range"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the Python <code>for<\/code> loop and how to use it to execute a code block a fixed number of times.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to Python for loop statement with the range() function<\/h2>\n\n\n\n<p>In programming, you often want to execute a block of code multiple times. To do so, you use a <code>for<\/code> loop.<\/p>\n\n\n\n<p>The following illustrates the syntax of a <code>for<\/code> loop:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">for<\/span> index <span class=\"hljs-keyword\">in<\/span> range(n):\n    statement<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax, the <code>index<\/code> is called a <strong>loop counter<\/strong>. And <code>n<\/code> is the number of times that the loop will execute the <code>statement<\/code>.<\/p>\n\n\n\n<p>The name of the loop counter doesn&#8217;t have to be <code>index<\/code>, you can use whatever name you want.<\/p>\n\n\n\n<p>The <code>range()<\/code> is a built-in function in Python. It&#8217;s like the <code>print()<\/code> function in the sense that it&#8217;s always available in the program.<\/p>\n\n\n\n<p>The <code>range(n)<\/code> generates a sequence of <code>n<\/code> integers starting at zero. It increases the value by one until it reaches <code>n<\/code>.<\/p>\n\n\n\n<p>So the <code>range(n)<\/code> generates a sequence of numbers: <code>0<\/code>,<code>1<\/code>, <code>2<\/code>, &#8230;<code>n-1<\/code>. Note that it&#8217;s always short of the final number (<code>n<\/code>).<\/p>\n\n\n\n<p>The following diagram illustrates the <code>for<\/code> loop statement:<\/p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"272\" height=\"465\" src=\"https:\/\/www.pyprifix.netlify.app\/wp-content\/uploads\/2020\/10\/Python-for-loop.png\" alt=\"Python for loop\" class=\"wp-image-849\" srcset=\"https:\/\/www.pyprifix.netlify.app\/wp-content\/uploads\/2020\/10\/Python-for-loop.png 272w, https:\/\/www.pyprifix.netlify.app\/wp-content\/uploads\/2020\/10\/Python-for-loop-175x300.png 175w\" sizes=\"(max-width: 272px) 100vw, 272px\" \/><\/figure><\/div>\n\n\n<p>The following example shows how to use the <code>for<\/code> loop with the <code>range()<\/code> function to display 5 numbers from 0 to 4 to the screen:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">for<\/span> index <span class=\"hljs-keyword\">in<\/span> range(<span class=\"hljs-number\">5<\/span>):\n    print(index)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-number\">0<\/span>\n<span class=\"hljs-number\">1<\/span>\n<span class=\"hljs-number\">2<\/span>\n<span class=\"hljs-number\">3<\/span>\n<span class=\"hljs-number\">4<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>for<\/code> loop executes the statement <code>print(index)<\/code> exactly five times.<\/p>\n\n\n\n<p>If you want to show 5 numbers from 1 to 5 on the screen, you can do something like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">for<\/span> index <span class=\"hljs-keyword\">in<\/span> range(<span class=\"hljs-number\">5<\/span>):\n    print(index + <span class=\"hljs-number\">1<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-number\">1<\/span>\n<span class=\"hljs-number\">2<\/span>\n<span class=\"hljs-number\">3<\/span>\n<span class=\"hljs-number\">4<\/span>\n<span class=\"hljs-number\">5<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we increase the <code>index<\/code> by one in each iteration and print it out. However, there&#8217;s a better way to do it.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Specifying the starting value for the sequence<\/h3>\n\n\n\n<p>By default, the <code>range()<\/code> function uses zero as the starting number for the sequence. <\/p>\n\n\n\n<p>In addition, the <code>range()<\/code> function allows you to specify the starting number like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">range(start, stop)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax, the <code>range()<\/code> function increases the <code>start<\/code> value by one until it reaches the <code>stop<\/code> value.<\/p>\n\n\n\n<p>The following example uses a <code>for<\/code> loop to show five numbers, from 1 to 5 to the screen:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">for<\/span> index <span class=\"hljs-keyword\">in<\/span> range(<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">6<\/span>):\n    print(index)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-number\">1<\/span>\n<span class=\"hljs-number\">2<\/span>\n<span class=\"hljs-number\">3<\/span>\n<span class=\"hljs-number\">4<\/span>\n<span class=\"hljs-number\">5<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Specifying the increment for the sequence<\/h3>\n\n\n\n<p>By default, the <code>range(start, stop)<\/code> increases the <code>start<\/code> value by one in each loop iteration.<\/p>\n\n\n\n<p>To increase the <code>start<\/code> value by a different number, you use the following form of the <code>range()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">range(start, stop, step)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this form, you can specify the value that the <code>range()<\/code> function should increase.<\/p>\n\n\n\n<p>The following example shows all the odd numbers from 0 to 10:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">for<\/span> index <span class=\"hljs-keyword\">in<\/span> range(<span class=\"hljs-number\">0<\/span>, <span class=\"hljs-number\">11<\/span>, <span class=\"hljs-number\">2<\/span>):\n    print(index)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-number\">0<\/span>\n<span class=\"hljs-number\">2<\/span>\n<span class=\"hljs-number\">4<\/span>\n<span class=\"hljs-number\">6<\/span>\n<span class=\"hljs-number\">8<\/span>\n<span class=\"hljs-number\">10<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Using Python for loop to calculate the sum of a sequence<\/h2>\n\n\n\n<p>The following example uses the for loop statement to calculate the sum of numbers from 1 to 100:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">sum = <span class=\"hljs-number\">0<\/span>\n<span class=\"hljs-keyword\">for<\/span> num <span class=\"hljs-keyword\">in<\/span> range(<span class=\"hljs-number\">101<\/span>):\n    sum += num\n\nprint(sum)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-number\">5050<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>First, the sum is initialized to zero.<\/li><li>Second, the sum is added with the number from 1 to 100 in each iteration.<\/li><li>Finally, show the sum to the screen.<\/li><\/ul>\n\n\n\n<p>By the way, if you&#8217;re a mathematician, you can use the simple formula:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">n = <span class=\"hljs-number\">100<\/span>\nsum = n * (n+<span class=\"hljs-number\">1<\/span>)\/<span class=\"hljs-number\">2<\/span>\nprint(sum)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Use the <code>for<\/code> loop statement to run a code block a fixed number of times.<\/li><li>Use the <code>range(start, stop, step)<\/code> to customize the loop.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"89\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-for-range\/\"\n\t\t\t\tdata-post-title=\"Python for Loop with Range\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"89\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-for-range\/\"\n\t\t\t\tdata-post-title=\"Python for Loop with Range\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>This tutorial shows you how to use the Python for loop with the range() function to execute a code block for fixed number times.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":37,"menu_order":12,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"_links":{"self":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/89"}],"collection":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/comments?post=89"}],"version-history":[{"count":4,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/89\/revisions"}],"predecessor-version":[{"id":4813,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/89\/revisions\/4813"}],"up":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/37"}],"wp:attachment":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/media?parent=89"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}