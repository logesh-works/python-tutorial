{"id":2772,"date":"2021-11-08T09:38:59","date_gmt":"2021-11-08T09:38:59","guid":{"rendered":"https:\/\/www.pyprifix.netlify.app\/?page_id=2772"},"modified":"2022-09-06T15:14:56","modified_gmt":"2022-09-06T15:14:56","slug":"python-liskov-substitution-principle","status":"publish","type":"page","link":"https:\/\/www.pyprifix.netlify.app\/python-oop\/python-liskov-substitution-principle\/","title":{"rendered":"Python Liskov Substitution Principle"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the Liskov Substitution Principle and how to implement it in Python.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to the Liskov substitution principle<\/h2>\n\n\n\n<p>The Liskov substitution principle (LSV) is one of the five principles in the SOLID principles. The L in SOLID stands for the Liskov substitution principle.<\/p>\n\n\n\n<ul><li><strong>S<\/strong>&nbsp;&#8211; <a href=\"https:\/\/www.pyprifix.netlify.app\/python-oop\/python-single-responsibility-principle\/\">Single Responsibility Principle<\/a><\/li><li><strong>O<\/strong>&nbsp;&#8211; <a href=\"https:\/\/www.pyprifix.netlify.app\/python-oop\/python-open-closed-principle\/\">Open-closed Principle<\/a><\/li><li><strong>L<\/strong>&nbsp;&#8211; Liskov Substitution Principle<\/li><li><strong>I<\/strong>&nbsp;&#8211; <a href=\"https:\/\/www.pyprifix.netlify.app\/python-oop\/python-interface-segregation-principle\/\">Interface Segregation Principle<\/a><\/li><li><strong>D<\/strong>&nbsp;&#8211; <a href=\"https:\/\/www.pyprifix.netlify.app\/python-oop\/python-dependency-inversion-principle\/\">Dependency Inversion Principle<\/a><\/li><\/ul>\n\n\n\n<p>The Liskov substitution principle states that a child class must be substitutable for its parent class. Liskov substitution principle aims to ensure that the child class can assume the place of its parent class without causing any errors.<\/p>\n\n\n\n<p>Consider the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">from<\/span> abc <span class=\"hljs-keyword\">import<\/span> ABC, abstractmethod\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Notification<\/span><span class=\"hljs-params\">(ABC)<\/span>:<\/span>\n<span class=\"hljs-meta\">    @abstractmethod<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">notify<\/span><span class=\"hljs-params\">(self, message, email)<\/span>:<\/span>\n        <span class=\"hljs-keyword\">pass<\/span>\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Email<\/span><span class=\"hljs-params\">(Notification)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">notify<\/span><span class=\"hljs-params\">(self, message, email)<\/span>:<\/span>\n        print(<span class=\"hljs-string\">f'Send <span class=\"hljs-subst\">{message}<\/span> to <span class=\"hljs-subst\">{email}<\/span>'<\/span>)\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">SMS<\/span><span class=\"hljs-params\">(Notification)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">notify<\/span><span class=\"hljs-params\">(self, message, phone)<\/span>:<\/span>\n        print(<span class=\"hljs-string\">f'Send <span class=\"hljs-subst\">{message}<\/span> to <span class=\"hljs-subst\">{phone}<\/span>'<\/span>)\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    notification = SMS()\n    notification.notify(<span class=\"hljs-string\">'Hello'<\/span>, <span class=\"hljs-string\">'john@test.com'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, we have three classes: <code>Notification<\/code>, <code>Email<\/code>, and <code>SMS<\/code>. The <code>Email<\/code> and <code>SMS<\/code> classes inherit from the <code>Notification<\/code> class.<\/p>\n\n\n\n<p>The <code>Notification<\/code> <a href=\"https:\/\/www.pyprifix.netlify.app\/python-oop\/python-abstract-class\/\">abstract class<\/a> has <code>notify()<\/code> method that sends a message to an email address.<\/p>\n\n\n\n<p>The <code>notify()<\/code> method of the <code>Email<\/code> class sends a message to an email, which is fine.<\/p>\n\n\n\n<p>However, the <code>SMS<\/code> class uses a phone number, not an email, for sending a message. Therefore, we need to change the signature of the <code>notify()<\/code> method of the <code>SMS<\/code> class to accept a phone number instead of an email.<\/p>\n\n\n\n<p>The following <code>NotificationManager<\/code> class uses the <code>Notification<\/code> object to send a message to a <code>Contact<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Contact<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, name, email, phone)<\/span>:<\/span>\n        self.name = name\n        self.email = email\n        self.phone = phone\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">NotificationManager<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, notification, contact)<\/span>:<\/span>\n        self.contact = contact\n        self.notification = notification\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">send<\/span><span class=\"hljs-params\">(self, message)<\/span>:<\/span>\n        <span class=\"hljs-keyword\">if<\/span> isinstance(self.notification, Email):\n            self.notification.notify(message, contact.email)\n        <span class=\"hljs-keyword\">elif<\/span> isinstance(self.notification, SMS):\n            self.notification.notify(message, contact.phone)\n        <span class=\"hljs-keyword\">else<\/span>:\n            <span class=\"hljs-keyword\">raise<\/span> Exception(<span class=\"hljs-string\">'The notification is not supported'<\/span>)\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    contact = Contact(<span class=\"hljs-string\">'John Doe'<\/span>, <span class=\"hljs-string\">'john@test.com'<\/span>, <span class=\"hljs-string\">'(408)-888-9999'<\/span>)\n    notification_manager = NotificationManager(SMS(), contact)\n    notification_manager.send(<span class=\"hljs-string\">'Hello John'<\/span>)\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>send()<\/code> method of the <code>NoticationManager<\/code> class accepts a notification object. It checks whether the notification is an instance of the <code>Email<\/code> or <code>SMS<\/code> and passes the email and phone of contact to the <code>notify()<\/code> method respectively.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Conform with the Liskov substitution principle<\/h2>\n\n\n\n<p>First, redefine the <code>notify()<\/code> method of the <code>Notification<\/code> class so that it doesn&#8217;t include the <code>email<\/code> parameter:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Notification<\/span><span class=\"hljs-params\">(ABC)<\/span>:<\/span>\n<span class=\"hljs-meta\">    @abstractmethod<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">notify<\/span><span class=\"hljs-params\">(self, message)<\/span>:<\/span>\n        <span class=\"hljs-keyword\">pass<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, add the <code>email<\/code> parameter to the <code>__init__<\/code> method of the <code>Email<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Email<\/span><span class=\"hljs-params\">(Notification)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, email)<\/span>:<\/span>\n        self.email = email\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">notify<\/span><span class=\"hljs-params\">(self, message)<\/span>:<\/span>\n        print(<span class=\"hljs-string\">f'Send \"<span class=\"hljs-subst\">{message}<\/span>\" to <span class=\"hljs-subst\">{self.email}<\/span>'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, add the <code>phone<\/code> parameter to the <code>__init__<\/code> method of the <code>SMS<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">SMS<\/span><span class=\"hljs-params\">(Notification)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, phone)<\/span>:<\/span>\n        self.phone = phone\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">notify<\/span><span class=\"hljs-params\">(self, message)<\/span>:<\/span>\n        print(<span class=\"hljs-string\">f'Send \"<span class=\"hljs-subst\">{message}<\/span>\" to <span class=\"hljs-subst\">{self.phone}<\/span>'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fourth, change the <code>NotificationManager<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">NotificationManager<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, notification)<\/span>:<\/span>\n        self.notification = notification\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">send<\/span><span class=\"hljs-params\">(self, message)<\/span>:<\/span>\n        self.notification.notify(message)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Put it all together:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">from<\/span> abc <span class=\"hljs-keyword\">import<\/span> ABC, abstractmethod\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Notification<\/span><span class=\"hljs-params\">(ABC)<\/span>:<\/span>\n<span class=\"hljs-meta\">    @abstractmethod<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">notify<\/span><span class=\"hljs-params\">(self, message)<\/span>:<\/span>\n        <span class=\"hljs-keyword\">pass<\/span>\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Email<\/span><span class=\"hljs-params\">(Notification)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, email)<\/span>:<\/span>\n        self.email = email\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">notify<\/span><span class=\"hljs-params\">(self, message)<\/span>:<\/span>\n        print(<span class=\"hljs-string\">f'Send \"<span class=\"hljs-subst\">{message}<\/span>\" to <span class=\"hljs-subst\">{self.email}<\/span>'<\/span>)\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">SMS<\/span><span class=\"hljs-params\">(Notification)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, phone)<\/span>:<\/span>\n        self.phone = phone\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">notify<\/span><span class=\"hljs-params\">(self, message)<\/span>:<\/span>\n        print(<span class=\"hljs-string\">f'Send \"<span class=\"hljs-subst\">{message}<\/span>\" to <span class=\"hljs-subst\">{self.phone}<\/span>'<\/span>)\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">Contact<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, name, email, phone)<\/span>:<\/span>\n        self.name = name\n        self.email = email\n        self.phone = phone\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">NotificationManager<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, notification)<\/span>:<\/span>\n        self.notification = notification\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">send<\/span><span class=\"hljs-params\">(self, message)<\/span>:<\/span>\n        self.notification.notify(message)\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    contact = Contact(<span class=\"hljs-string\">'John Doe'<\/span>, <span class=\"hljs-string\">'john@test.com'<\/span>, <span class=\"hljs-string\">'(408)-888-9999'<\/span>)\n\n    sms_notification = SMS(contact.phone)\n    email_notification = Email(contact.email)\n\n    notification_manager = NotificationManager(sms_notification)\n    notification_manager.send(<span class=\"hljs-string\">'Hello John'<\/span>)\n\n    notification_manager.notification = email_notification\n    notification_manager.send(<span class=\"hljs-string\">'Hi John'<\/span>)\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>The Liskov substitution principle states that a child class must be substitutable for its parent class.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2772\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-oop\/python-liskov-substitution-principle\/\"\n\t\t\t\tdata-post-title=\"Python Liskov Substitution Principle\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2772\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-oop\/python-liskov-substitution-principle\/\"\n\t\t\t\tdata-post-title=\"Python Liskov Substitution Principle\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn about the Liskov Substitution Principle and how to implement it in Python. Introduction to the Liskov substitution principle The Liskov substitution principle (LSV) is one of the five principles in the SOLID principles. The L in SOLID stands for the Liskov substitution principle. S&nbsp;&#8211; Single Responsibility Principle O&nbsp;&#8211; Open-closed [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":417,"menu_order":33,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"_links":{"self":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/2772"}],"collection":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/comments?post=2772"}],"version-history":[{"count":5,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/2772\/revisions"}],"predecessor-version":[{"id":4604,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/2772\/revisions\/4604"}],"up":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/417"}],"wp:attachment":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/media?parent=2772"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}