{"id":606,"date":"2020-10-17T08:04:05","date_gmt":"2020-10-17T08:04:05","guid":{"rendered":"https:\/\/www.pyprifix.netlify.app\/?page_id=606"},"modified":"2022-09-15T04:20:22","modified_gmt":"2022-09-15T04:20:22","slug":"python-set-intersection","status":"publish","type":"page","link":"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-set-intersection\/","title":{"rendered":"Python Set Intersection"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the Python set intersection and how to use it to intersect two or more sets.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">TL;DR<\/h2>\n\n\n\n<p>In Python, you can use the set <code>intersection()<\/code> method or set intersection operator (&amp;) to intersect two or more <a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-set\/\">sets<\/a>:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">new_set = set1.intersection(set2, set3)\nnew_set = set1 &amp; set2 &amp; set3<\/code><\/span><\/pre>\n\n\n<p>The intersection() method and &amp; operator have the same performance.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to Python set intersection<\/h2>\n\n\n\n<p>When intersecting two or more <a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-set\/\">sets<\/a>, you&#8217;ll get a new set consisting of elements that exist in all sets.<\/p>\n\n\n\n<p>Suppose that you have two following sets <code>s1<\/code> and <code>s2<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">s1 = {<span class=\"hljs-string\">'Python'<\/span>, <span class=\"hljs-string\">'Java'<\/span>,<span class=\"hljs-string\">'C++'<\/span>}\ns2 = {<span class=\"hljs-string\">'C#'<\/span>, <span class=\"hljs-string\">'Java'<\/span>, <span class=\"hljs-string\">'C++'<\/span> }<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The intersection of these two sets returns a new set that contains two elements <code>'Java'<\/code> and <code>'C++'<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">s = {<span class=\"hljs-string\">'Java'<\/span>, <span class=\"hljs-string\">'C++'<\/span>}<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>&#8230; because they&#8217;re the only elements that exist in both sets.<\/p>\n\n\n\n<p>The following Venn diagram illustrates the intersection of two sets <code>s1<\/code> and <code>s<\/code>2:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"683\" height=\"163\" src=\"https:\/\/www.pyprifix.netlify.app\/wp-content\/uploads\/2020\/10\/Python-Set-Intersection.png\" alt=\"Python Set Intersection Example\" class=\"wp-image-607\" srcset=\"https:\/\/www.pyprifix.netlify.app\/wp-content\/uploads\/2020\/10\/Python-Set-Intersection.png 683w, https:\/\/www.pyprifix.netlify.app\/wp-content\/uploads\/2020\/10\/Python-Set-Intersection-300x72.png 300w\" sizes=\"(max-width: 683px) 100vw, 683px\" \/><\/figure>\n\n\n\n<p>The set intersection has many useful applications. For example, you can use set intersections to find the common favorites of two friends on a social networking application or to search for common skills of two or more employees on an HR application.<\/p>\n\n\n\n<p>In Python, you can intersect two or more sets using the set <code>intersection()<\/code> method or set intersection operator (<code>&amp;<\/code>).<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">1) Using Python set intersection() method to intersect two or more sets<\/h3>\n\n\n\n<p>This example shows how to use the set <code>intersection()<\/code> method to intersect two or more sets:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">new_set = set1.intersection(set2, set3, ...)\n<\/code><\/span><\/pre>\n\n\n<p>The following shows how to use the <code>intersection()<\/code> method to intersect the sets s1 and s2:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">s1 = {<span class=\"hljs-string\">'Python'<\/span>, <span class=\"hljs-string\">'Java'<\/span>, <span class=\"hljs-string\">'C++'<\/span>}\ns2 = {<span class=\"hljs-string\">'C#'<\/span>, <span class=\"hljs-string\">'Java'<\/span>, <span class=\"hljs-string\">'C++'<\/span>}\n\ns = s1.intersection(s2)\n\n<span class=\"hljs-keyword\">print<\/span>(s)\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">{<span class=\"hljs-string\">'C++'<\/span>, <span class=\"hljs-string\">'Java'<\/span>}\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3 class=\"wp-block-heading\">2) Using Python set intersection (&amp;) operator to intersect two or more sets<\/h3>\n\n\n\n<p>Python provides you with the set intersection operator (<code>&amp;<\/code>) that allows you to intersect two or more sets:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">new_set = s1 &amp; s2 &amp; s3 &amp; ...<\/code><\/span><\/pre>\n\n\n<p>The following example uses the set intersection operator (<code>&amp;<\/code>) to intersect the sets s1 and s2:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">s1 = {<span class=\"hljs-string\">'Python'<\/span>, <span class=\"hljs-string\">'Java'<\/span>, <span class=\"hljs-string\">'C++'<\/span>}\ns2 = {<span class=\"hljs-string\">'C#'<\/span>, <span class=\"hljs-string\">'Java'<\/span>, <span class=\"hljs-string\">'C++'<\/span>}\n\ns = s1 &amp; s2\n\n<span class=\"hljs-keyword\">print<\/span>(s)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">new_set = s1 &amp; s2 &amp; s3 &amp; ...<\/code><\/span><\/pre>\n\n\n<h3 class=\"wp-block-heading\">Set intersection() method vs set intersection operator (&amp;)<\/h3>\n\n\n\n<p>The set intersection operator only allows sets, while the set <code>intersection()<\/code> method can accept any <a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-iterables\/\">iterables<\/a>, like <a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-string\/\">strings<\/a>, <a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-list\/\">lists<\/a>, and <a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-dictionary\/\">dictionaries<\/a>.<\/p>\n\n\n\n<p>If you pass iterables to the <code>intersection()<\/code> method, it&#8217;ll convert the iterables to set before intersecting them.<\/p>\n\n\n\n<p>However, the set intersection operator (<code>&amp;<\/code>) will raise an error if you use it with iterables.<\/p>\n\n\n\n<p>The following example uses the <code>intersection()<\/code> method to intersect a set with a list:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">numbers = {<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>}\nscores = &#91;<span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">4<\/span>]\n\nnumbers = numbers.intersection(scores)\n\n<span class=\"hljs-keyword\">print<\/span>(numbers)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">{2, 3}<\/code><\/span><\/pre>\n\n\n<p>If you use the set intersection operator (<code>&amp;<\/code>) instead, you&#8217;ll get an error:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">numbers = {<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>}\nscores = &#91;<span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">4<\/span>]\n\nnumbers = numbers &amp; scores\n\n<span class=\"hljs-keyword\">print<\/span>(numbers)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">TypeError<\/span>: unsupported operand type(s) <span class=\"hljs-keyword\">for<\/span> &amp;: <span class=\"hljs-string\">'set'<\/span> and <span class=\"hljs-string\">'list'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>The intersection of two or more sets returns elements that exist in all sets.<\/li><li>Use the <code>intersection()<\/code> method or set intersection operator (<code>&amp;<\/code>) to intersect two or more sets.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"606\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-set-intersection\/\"\n\t\t\t\tdata-post-title=\"Python Set Intersection\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"606\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-set-intersection\/\"\n\t\t\t\tdata-post-title=\"Python Set Intersection\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn about the Python set intersection and how to use it to intersect two or more sets.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":37,"menu_order":41,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"_links":{"self":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/606"}],"collection":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/comments?post=606"}],"version-history":[{"count":5,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/606\/revisions"}],"predecessor-version":[{"id":4842,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/606\/revisions\/4842"}],"up":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/37"}],"wp:attachment":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/media?parent=606"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}