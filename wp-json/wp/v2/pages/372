{"id":372,"date":"2020-10-08T08:09:13","date_gmt":"2020-10-08T08:09:13","guid":{"rendered":"https:\/\/www.pyprifix.netlify.app\/?page_id=372"},"modified":"2022-09-15T04:12:45","modified_gmt":"2022-09-15T04:12:45","slug":"python-filter-list","status":"publish","type":"page","link":"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-filter-list\/","title":{"rendered":"How to Filter List Elements in Python"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to filter list elements by using the built-in Python <code>filter()<\/code> function.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Introduction to Python filter() function<\/h2>\n\n\n\n<p>Sometimes, you need to <a href=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-for-loop-list\/\">iterate over elements of a list<\/a> and select some of them based on specified criteria.<\/p>\n\n\n\n<p>Suppose that you have the following list of <code>scores<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">scores = &#91;<span class=\"hljs-number\">70<\/span>, <span class=\"hljs-number\">60<\/span>, <span class=\"hljs-number\">80<\/span>, <span class=\"hljs-number\">90<\/span>, <span class=\"hljs-number\">50<\/span>]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To get all elements from the <code>scores<\/code> list where each element is greater than or equal to 70, you use the following code:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">scores = &#91;<span class=\"hljs-number\">70<\/span>, <span class=\"hljs-number\">60<\/span>, <span class=\"hljs-number\">80<\/span>, <span class=\"hljs-number\">90<\/span>, <span class=\"hljs-number\">50<\/span>]\n\nfiltered = &#91;]\n\n<span class=\"hljs-keyword\">for<\/span> score <span class=\"hljs-keyword\">in<\/span> scores:\n    <span class=\"hljs-keyword\">if<\/span> score &gt;= <span class=\"hljs-number\">70<\/span>:\n        filtered.append(score)\n\nprint(filtered)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>First, define an empty list (<code>filtered<\/code>) that will hold the elements from the <code>scores<\/code> list.<\/li><li>Second, iterate over the elements of the <code>scores<\/code> list. If the element is greater than or equal to 70, add it to the <code>filtered<\/code> list.<\/li><li>Third, show the <code>filtered<\/code> list to the screen.<\/li><\/ul>\n\n\n\n<p>Python has a built-in function called <code>filter()<\/code> that allows you to filter a list (or a tuple) in a more beautiful way.<\/p>\n\n\n\n<p>The following shows the syntax of the <code>filter()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">filter(fn, list)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>filter()<\/code> function iterates over the elements of the <code>list<\/code> and applies the <code>fn()<\/code> function to each element. It returns an iterator for the elements where the <code>fn()<\/code> returns <code>True<\/code>.<\/p>\n\n\n\n<p>In fact, you can pass any iterable to the second argument of the <code>filter()<\/code> function, not just a list.<\/p>\n\n\n\n<p>The following shows how to use the <code>filter()<\/code> function to return a list of <code>scores<\/code> where each score is greater than or equal to 70:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">scores = &#91;<span class=\"hljs-number\">70<\/span>, <span class=\"hljs-number\">60<\/span>, <span class=\"hljs-number\">80<\/span>, <span class=\"hljs-number\">90<\/span>, <span class=\"hljs-number\">50<\/span>]\nfiltered = filter(<span class=\"hljs-keyword\">lambda<\/span> score: score &gt;= <span class=\"hljs-number\">70<\/span>, scores)\n\nprint(list(filtered))\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">&#91;<span class=\"hljs-number\">70<\/span>, <span class=\"hljs-number\">80<\/span>, <span class=\"hljs-number\">90<\/span>]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Since the <code>filter()<\/code> function returns an iterator, you can use a <code>for<\/code> loop to iterate over it. Or you can use the <code>list()<\/code> function to convert the iterator to a list.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Using the Python filter() function to filter a list of tuples example<\/h3>\n\n\n\n<p>Suppose you have the following list of tuples:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">countries = &#91;\n    &#91;<span class=\"hljs-string\">'China'<\/span>, <span class=\"hljs-number\">1394015977<\/span>],\n    &#91;<span class=\"hljs-string\">'United States'<\/span>, <span class=\"hljs-number\">329877505<\/span>],\n    &#91;<span class=\"hljs-string\">'India'<\/span>, <span class=\"hljs-number\">1326093247<\/span>],\n    &#91;<span class=\"hljs-string\">'Indonesia'<\/span>, <span class=\"hljs-number\">267026366<\/span>],\n    &#91;<span class=\"hljs-string\">'Bangladesh'<\/span>, <span class=\"hljs-number\">162650853<\/span>],\n    &#91;<span class=\"hljs-string\">'Pakistan'<\/span>, <span class=\"hljs-number\">233500636<\/span>],\n    &#91;<span class=\"hljs-string\">'Nigeria'<\/span>, <span class=\"hljs-number\">214028302<\/span>],\n    &#91;<span class=\"hljs-string\">'Brazil'<\/span>, <span class=\"hljs-number\">21171597<\/span>],\n    &#91;<span class=\"hljs-string\">'Russia'<\/span>, <span class=\"hljs-number\">141722205<\/span>],\n    &#91;<span class=\"hljs-string\">'Mexico'<\/span>, <span class=\"hljs-number\">128649565<\/span>]\n]\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Each element in a list is a tuple that contains the country&#8217;s name and population.<\/p>\n\n\n\n<p>To get all the countries whose populations are greater than 300 million, you can use the <code>filter()<\/code> function as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">countries = &#91;\n    &#91;<span class=\"hljs-string\">'China'<\/span>, <span class=\"hljs-number\">1394015977<\/span>],\n    &#91;<span class=\"hljs-string\">'United States'<\/span>, <span class=\"hljs-number\">329877505<\/span>],\n    &#91;<span class=\"hljs-string\">'India'<\/span>, <span class=\"hljs-number\">1326093247<\/span>],\n    &#91;<span class=\"hljs-string\">'Indonesia'<\/span>, <span class=\"hljs-number\">267026366<\/span>],\n    &#91;<span class=\"hljs-string\">'Bangladesh'<\/span>, <span class=\"hljs-number\">162650853<\/span>],\n    &#91;<span class=\"hljs-string\">'Pakistan'<\/span>, <span class=\"hljs-number\">233500636<\/span>],\n    &#91;<span class=\"hljs-string\">'Nigeria'<\/span>, <span class=\"hljs-number\">214028302<\/span>],\n    &#91;<span class=\"hljs-string\">'Brazil'<\/span>, <span class=\"hljs-number\">21171597<\/span>],\n    &#91;<span class=\"hljs-string\">'Russia'<\/span>, <span class=\"hljs-number\">141722205<\/span>],\n    &#91;<span class=\"hljs-string\">'Mexico'<\/span>, <span class=\"hljs-number\">128649565<\/span>]\n]\n\npopulated = filter(<span class=\"hljs-keyword\">lambda<\/span> c: c&#91;<span class=\"hljs-number\">1<\/span>] &gt; <span class=\"hljs-number\">300000000<\/span>, countries)\n\nprint(list(populated))\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">&#91;&#91;<span class=\"hljs-string\">'China'<\/span>, <span class=\"hljs-number\">1394015977<\/span>], &#91;<span class=\"hljs-string\">'India'<\/span>, <span class=\"hljs-number\">1326093247<\/span>], &#91;<span class=\"hljs-string\">'United States'<\/span>, <span class=\"hljs-number\">329877505<\/span>]]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2 class=\"wp-block-heading\">Summary<\/h2>\n\n\n\n<ul><li>Use the Python <code>filter()<\/code> function to filter a list (or a tuple).<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"372\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-filter-list\/\"\n\t\t\t\tdata-post-title=\"How to Filter List Elements in Python\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"372\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pyprifix.netlify.app\/python-basics\/python-filter-list\/\"\n\t\t\t\tdata-post-title=\"How to Filter List Elements in Python\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to filter list elements by using the built-in Python filter() function.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":37,"menu_order":33,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"_links":{"self":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/372"}],"collection":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/comments?post=372"}],"version-history":[{"count":5,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/372\/revisions"}],"predecessor-version":[{"id":4831,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/372\/revisions\/4831"}],"up":[{"embeddable":true,"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/pages\/37"}],"wp:attachment":[{"href":"https:\/\/www.pyprifix.netlify.app\/wp-json\/wp\/v2\/media?parent=372"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}